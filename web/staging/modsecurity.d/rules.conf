# ===== ModSecurity 3.0 セキュリティルール（ベストプラクティス） =====

# SQLインジェクション検出ルール
SecRule ARGS "@detectSQLi" \
    "id:2001,phase:2,t:none,log,deny,status:403,msg:'SQL Injection detected in arguments'"

SecRule ARGS_NAMES "@detectSQLi" \
    "id:2002,phase:2,t:none,log,deny,status:403,msg:'SQL Injection detected in argument names'"

# XSS攻撃検出ルール
SecRule ARGS "@detectXSS" \
    "id:2003,phase:2,t:none,log,deny,status:403,msg:'XSS attack detected in arguments'"

SecRule ARGS_NAMES "@detectXSS" \
    "id:2004,phase:2,t:none,log,deny,status:403,msg:'XSS attack detected in argument names'"

# パストラバーサル攻撃検出
SecRule ARGS "@contains ../" \
    "id:2005,phase:2,t:none,log,deny,status:403,msg:'Path traversal attack detected'"

SecRule ARGS "@contains ..\\" \
    "id:2006,phase:2,t:none,log,deny,status:403,msg:'Path traversal attack detected (Windows)'"

# コマンドインジェクション検出
SecRule ARGS "@detectSQLi" \
    "id:2007,phase:2,t:none,log,deny,status:403,msg:'Command injection detected'"

# ファイルアップロード制限
SecRule FILES_TMPNAMES "@contains /tmp/" \
    "id:2008,phase:2,t:none,log,deny,status:403,msg:'Invalid file upload path'"

SecRule FILES_NAMES "@contains .php" \
    "id:2009,phase:2,t:none,log,deny,status:403,msg:'PHP file upload not allowed'"

# レート制限（詳細版）
SecRule &ARGS "@gt 50" \
    "id:2010,phase:1,t:none,log,deny,status:429,msg:'Too many arguments'"

SecRule &ARGS_NAMES "@gt 20" \
    "id:2011,phase:1,t:none,log,deny,status:429,msg:'Too many argument names'"

# セッション管理
SecRule &SESSIONID "@eq 0" \
    "id:2012,phase:1,t:none,log,deny,status:403,msg:'Session hijacking attempt'"

# ヘッダーインジェクション対策
SecRule REQUEST_HEADERS "@detectSQLi" \
    "id:2013,phase:1,t:none,log,deny,status:403,msg:'Header injection detected'"

SecRule REQUEST_HEADERS "@detectXSS" \
    "id:2014,phase:1,t:none,log,deny,status:403,msg:'XSS in headers detected'"

# リクエストサイズ制限
SecRule REQUEST_BODY "@gt 10485760" \
    "id:2015,phase:1,t:none,log,deny,status:413,msg:'Request body too large'"

# ユーザーエージェント検証
SecRule REQUEST_HEADERS:User-Agent "@contains sqlmap" \
    "id:2016,phase:1,t:none,log,deny,status:403,msg:'SQLMap tool detected'"

SecRule REQUEST_HEADERS:User-Agent "@contains nikto" \
    "id:2017,phase:1,t:none,log,deny,status:403,msg:'Nikto scanner detected'"

# 除外ルールは exclusions.conf で管理

# ===== ゲームセキュリティルール =====

# ゲームセッション管理の強化
SecRule &SESSIONID "@gt 0" \
    "id:2030,phase:1,t:none,log,pass,msg:'Valid game session detected'"

# ゲーム操作の頻度制限（DoS攻撃対策）
SecRule &ARGS "@gt 100" \
    "id:2031,phase:1,t:none,log,deny,status:429,msg:'Too many game parameters - possible DoS attack'"

# ゲームリクエストの連続性チェック
SecRule REQUEST_URI "@contains /api/games" \
    "id:2032,phase:1,t:none,setvar:tx.game_request_count=+1,expirevar:tx.game_request_count=60,log,pass,msg:'Game request counter updated'"

SecRule TX:game_request_count "@gt 300" \
    "id:2033,phase:1,t:none,log,deny,status:429,msg:'Game request rate limit exceeded (300 req/min)'"

# ベッティング操作の頻度制限
SecRule REQUEST_URI "@contains /api/betting" \
    "id:2034,phase:1,t:none,setvar:tx.betting_count=+1,expirevar:tx.betting_count=60,log,pass,msg:'Betting counter updated'"

SecRule TX:betting_count "@gt 100" \
    "id:2035,phase:1,t:none,log,deny,status:429,msg:'Betting rate limit exceeded (100 req/min)'"

# ゲーム結果更新の頻度制限
SecRule REQUEST_URI "@contains /api/result" \
    "id:2036,phase:1,t:none,setvar:tx.result_count=+1,expirevar:tx.result_count=60,log,pass,msg:'Result update counter updated'"

SecRule TX:result_count "@gt 200" \
    "id:2037,phase:1,t:none,log,deny,status:429,msg:'Result update rate limit exceeded (200 req/min)'"

# ランキング更新の頻度制限
SecRule REQUEST_URI "@contains /api/ranking" \
    "id:2038,phase:1,t:none,setvar:tx.ranking_count=+1,expirevar:tx.ranking_count=300,log,pass,msg:'Ranking counter updated'"

SecRule TX:ranking_count "@gt 50" \
    "id:2039,phase:1,t:none,log,deny,status:429,msg:'Ranking update rate limit exceeded (50 req/5min)'"

# ===== ゲームパラメータ検証 =====

# ゲーム用のカスタムヘッダー検証
SecRule REQUEST_HEADERS:X-Game-Session "@contains game_" \
    "id:2040,phase:1,t:none,log,pass,msg:'Valid game session header detected'"

SecRule REQUEST_HEADERS:X-Game-Session "@contains invalid" \
    "id:2041,phase:1,t:none,log,deny,status:403,msg:'Invalid game session header'"

# ゲーム操作のパラメータ検証
SecRule ARGS:game_id "@rx ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$" \
    "id:2042,phase:2,t:none,log,pass,msg:'Valid game ID format'"

SecRule ARGS:bet_amount "@rx ^[0-9]+(\.[0-9]{1,2})?$" \
    "id:2043,phase:2,t:none,log,pass,msg:'Valid bet amount format'"

# ===== レート制限とフラッディング対策 =====

# 異常なリクエストパターンの検出
SecRule REQUEST_URI "@contains /api" \
    "id:2044,phase:1,t:none,setvar:tx.api_request_count=+1,expirevar:tx.api_request_count=60,log,pass,msg:'API request counter updated'"

SecRule TX:api_request_count "@gt 500" \
    "id:2045,phase:1,t:none,log,deny,status:429,msg:'API rate limit exceeded (500 req/min)'"

# ゲームセッションの有効性チェック
SecRule ARGS:session_token "@rx ^[A-Za-z0-9]{32,}$" \
    "id:2046,phase:2,t:none,log,pass,msg:'Valid session token format'"

SecRule ARGS:session_token "@contains null" \
    "id:2047,phase:2,t:none,log,deny,status:403,msg:'Invalid session token - null detected'"

# ゲーム操作の連続性チェック（フラッディング攻撃対策）
SecRule REQUEST_URI "@contains /api/games" \
    "id:2048,phase:1,t:none,setvar:tx.game_flood_count=+1,expirevar:tx.game_flood_count=10,log,pass,msg:'Game flood counter updated'"

SecRule TX:game_flood_count "@gt 50" \
    "id:2049,phase:1,t:none,log,deny,status:429,msg:'Game flood detected - too many requests in 10 seconds'"

# ===== レート制限の詳細設定 =====

# レート制限の有効化
SecAction "id:2050,phase:1,t:none,setvar:tx.rate_limit_enabled=1,log,pass,msg:'Rate limiting enabled'"

# 特別なレート制限除外は exclusions.conf で管理
