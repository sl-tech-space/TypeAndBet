# ===== 依存関係ステージ =====
FROM node:20-alpine AS deps
WORKDIR /app
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile --production=true

# ===== ビルドステージ =====
FROM node:20-alpine AS builder
WORKDIR /app

# deps の node_modules をコピー
COPY --from=deps /app/node_modules ./node_modules

# ビルドに必要なdevDependenciesをインストール
COPY package.json yarn.lock ./
RUN yarn add cross-env --dev

# ソースコピー
COPY . .

# キャッシュディレクトリを事前に作成し、権限を設定
RUN mkdir -p .next/cache && chmod -R 777 .next

# 環境変数
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Next.js Standalone ビルド
RUN yarn build

# ===== 本番ステージ =====
FROM node:20-alpine AS runner
WORKDIR /app


# 非rootユーザー作成とwgetインストール
RUN addgroup --system --gid 1001 nodejs \
    && adduser --system --uid 1001 nextjs \
    && apk add --no-cache wget

# Next.js Standaloneモードの出力ファイルをコピー
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/public ./public

# キャッシュディレクトリを作成し、権限を設定
RUN mkdir -p .next/cache && chown -R nextjs:nodejs .next && chmod -R 755 .next

USER nextjs

# ポート公開
EXPOSE 3000

# 環境変数
ENV NODE_ENV=production
ENV PORT=3000
ENV HOSTNAME=0.0.0.0

# 本番起動
CMD ["node", "server.js"]
