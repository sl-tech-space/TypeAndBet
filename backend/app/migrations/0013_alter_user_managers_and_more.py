# Generated by Django 5.0.2 on 2025-08-12 08:36

import app.models.managers
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0012_token_hash_migration'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', app.models.managers.UserManager()),
            ],
        ),
        migrations.RemoveIndex(
            model_name='emailverification',
            name='email_verif_token_403404_idx',
        ),
        migrations.RemoveIndex(
            model_name='passwordreset',
            name='password_re_token_fb23e2_idx',
        ),
        migrations.AlterUniqueTogether(
            name='ranking',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='ranking',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ranking', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['user', 'created_at'], name='idx_game_user_created'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['created_at'], name='idx_game_created'),
        ),
        migrations.AddIndex(
            model_name='ranking',
            index=models.Index(fields=['ranking'], name='idx_ranking_rank'),
        ),
        migrations.AddIndex(
            model_name='textpair',
            index=models.Index(fields=['is_converted'], name='idx_textpair_converted'),
        ),
        migrations.AddIndex(
            model_name='textpair',
            index=models.Index(fields=['created_at'], name='idx_textpair_created'),
        ),
        migrations.AddConstraint(
            model_name='game',
            constraint=models.CheckConstraint(check=models.Q(('bet_gold__gte', 100), ('bet_gold__lte', 700)), name='bet_gold_between_100_700'),
        ),
        migrations.AddConstraint(
            model_name='game',
            constraint=models.CheckConstraint(check=models.Q(('score__gte', 0)), name='score_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='game',
            constraint=models.CheckConstraint(check=models.Q(('before_bet_gold__gte', 0)), name='before_bet_gold_non_negative'),
        ),
        migrations.AddConstraint(
            model_name='game',
            constraint=models.CheckConstraint(check=models.Q(('result_gold__gte', 0)), name='result_gold_non_negative'),
        ),
    ]
