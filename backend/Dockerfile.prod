# マルチステージビルド - ビルドステージ
FROM python:3.11-slim as builder

WORKDIR /app

# ビルド依存関係のインストール
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Python仮想環境の作成
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# 依存関係のインストール（キャッシュを無効化）
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# 本番環境ステージ
FROM python:3.11-slim

WORKDIR /app

# セキュリティ設定
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    TZ=Asia/Tokyo \
    # 非rootユーザー設定（動的UID/GID）
    USER=django

# システム依存関係のインストール（容量制限を回避するため分割）
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libpq5 \
    cron \
    gosu \
    gettext-base \
    tzdata \
    gzip \
    && ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
    echo $TZ > /etc/timezone \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# MeCabを別途インストール（容量制限を回避）
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    mecab \
    mecab-ipadic-utf8 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# 仮想環境のコピー
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# 非rootユーザーの作成（動的UID/GID）
RUN groupadd -r $USER && \
    useradd -r -g $USER $USER

# cronジョブ用の設定
RUN mkdir -p /etc/cron.d && \
    chown -R $USER:$USER /etc/cron.d && \
    chmod 755 /etc/cron.d

# 必要なディレクトリの作成と権限設定
RUN mkdir -p /app/logs /app/media /app/tmp /var/log /var/run /shared && \
    chown -R $USER:$USER /app && \
    chown -R $USER:$USER /var/log && \
    chown -R $USER:$USER /var/run && \
    chown -R $USER:$USER /shared && \
    chmod 755 /app && \
    chmod 755 /app/logs && \
    chmod 755 /app/media && \
    chmod 700 /app/tmp && \
    chmod 755 /var/log && \
    chmod 755 /var/run && \
    chmod 755 /shared

# アプリケーションコードのコピー
COPY --chown=$USER:$USER . .

# cronジョブ設定スクリプトに実行権限を付与
RUN chmod +x setup_cron_jobs_prod.sh

# MeCab設定ファイルのシンボリックリンクを作成
RUN mkdir -p /usr/local/etc && ln -sf /etc/mecabrc /usr/local/etc/mecabrc

# ポート公開
EXPOSE 8000

# 起動スクリプトをコピー
COPY start.sh /usr/local/bin/start.sh
RUN chmod +x /usr/local/bin/start.sh

# cron-jobs専用の起動スクリプトをコピー
COPY start-cron.sh /usr/local/bin/start-cron.sh
RUN chmod +x /usr/local/bin/start-cron.sh

# 非rootユーザーに切り替え
USER $USER

# 起動コマンド
CMD ["/usr/local/bin/start.sh"]
